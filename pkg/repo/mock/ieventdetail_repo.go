// Code generated by MockGen. DO NOT EDIT.
// Source: event-detail-repo.go

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	gomock "github.com/golang/mock/gomock"
	model "quote/pkg/model"
	reflect "reflect"
)

// MockIEventDetailRepo is a mock of IEventDetailRepo interface
type MockIEventDetailRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIEventDetailRepoMockRecorder
}

// MockIEventDetailRepoMockRecorder is the mock recorder for MockIEventDetailRepo
type MockIEventDetailRepoMockRecorder struct {
	mock *MockIEventDetailRepo
}

// NewMockIEventDetailRepo creates a new mock instance
func NewMockIEventDetailRepo(ctrl *gomock.Controller) *MockIEventDetailRepo {
	mock := &MockIEventDetailRepo{ctrl: ctrl}
	mock.recorder = &MockIEventDetailRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIEventDetailRepo) EXPECT() *MockIEventDetailRepoMockRecorder {
	return m.recorder
}

// CreateEventDetail mocks base method
func (m *MockIEventDetailRepo) CreateEventDetail(eventDetail model.EventDetail) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEventDetail", eventDetail)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEventDetail indicates an expected call of CreateEventDetail
func (mr *MockIEventDetailRepoMockRecorder) CreateEventDetail(eventDetail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEventDetail", reflect.TypeOf((*MockIEventDetailRepo)(nil).CreateEventDetail), eventDetail)
}

// GetEventDetailByTitleOrInfo mocks base method
func (m *MockIEventDetailRepo) GetEventDetailByTitleOrInfo(searchTxt string) ([]model.EventDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventDetailByTitleOrInfo", searchTxt)
	ret0, _ := ret[0].([]model.EventDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEventDetailByTitleOrInfo indicates an expected call of GetEventDetailByTitleOrInfo
func (mr *MockIEventDetailRepoMockRecorder) GetEventDetailByTitleOrInfo(searchTxt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventDetailByTitleOrInfo", reflect.TypeOf((*MockIEventDetailRepo)(nil).GetEventDetailByTitleOrInfo), searchTxt)
}

// GetEventDetailByMonthDay mocks base method
func (m *MockIEventDetailRepo) GetEventDetailByMonthDay(month, day int) ([]model.EventDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventDetailByMonthDay", month, day)
	ret0, _ := ret[0].([]model.EventDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEventDetailByMonthDay indicates an expected call of GetEventDetailByMonthDay
func (mr *MockIEventDetailRepoMockRecorder) GetEventDetailByMonthDay(month, day interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventDetailByMonthDay", reflect.TypeOf((*MockIEventDetailRepo)(nil).GetEventDetailByMonthDay), month, day)
}
