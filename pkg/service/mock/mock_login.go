// Code generated by MockGen. DO NOT EDIT.
// Source: loginservice.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockILogin is a mock of ILogin interface
type MockILogin struct {
	ctrl     *gomock.Controller
	recorder *MockILoginMockRecorder
}

// MockILoginMockRecorder is the mock recorder for MockILogin
type MockILoginMockRecorder struct {
	mock *MockILogin
}

// NewMockILogin creates a new mock instance
func NewMockILogin(ctrl *gomock.Controller) *MockILogin {
	mock := &MockILogin{ctrl: ctrl}
	mock.recorder = &MockILoginMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockILogin) EXPECT() *MockILoginMockRecorder {
	return m.recorder
}

// Login mocks base method
func (m *MockILogin) Login(user, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", user, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// Login indicates an expected call of Login
func (mr *MockILoginMockRecorder) Login(user, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockILogin)(nil).Login), user, password)
}
